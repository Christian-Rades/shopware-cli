{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Shopware CLI is a CLI tool to manage your Shopware account and your Shopware projects. The goal is to simplify common tasks and provide tooling to make things easier. To start using the CLI, see the Install documentation","title":"Welcome to Shopware CLI"},{"location":"extension_quick_start/","text":"In this Guide we will learn how Shopware CLI can make the extension deployment easier with the Shopware Store. First you need to install the CLI. Login into your Shopware Account First we need to login into our Shopware account. For this execute the command shopware-cli account login and login with your credentials. This credentials will be saved locally. With shopware-cli account logout can you logout again. For the CI you can set enviroment variables SHOPWARE_CLI_ACCOUNT_EMAIL and SHOPWARE_CLI_ACCOUNT_PASSWORD skip the login step. Optional: Change the active Shopware Account company Your Shopware account can be in multiple companies. Use the command shopware-cli account company list to show all companys you have access. With shopware-cli account company use <id> can you switch the current company access. Optional: Create the extension in the Account To upload the zip later in the Store, you need to create the extension in the Account. If you haven't done this you can do this with shopware-cli extension create <Name> platform possible values are: classic (Shopware 5) platform (Shopware 6 Plugin system) themes (Shopware 6 App containg theme) apps (Shopware 6 App) Getting the Store Information into the Git repository To edit the Store page locally, we need first to generate the local files based on the current store page. For this we can use the command shopware-cli account producer extension info pull <extension-folder> . This command creates a .shopware-extension.yml config in the root folder with the current store page. The schema of the file can be found here . Editors supporting SchemaStore, should have autocomplete out of the box like Jetbrains products, VSCode. Uploading local Store Information to the Store After making changes on the .shopware-extension.yml , you have to run the shopware-cli account producer extension info push <extension-folder> to apply the changes on the store page. Uploading the extension zip to the Store To upload the extension zip, you have to use the command shopware-cli account producer extension upload <extension-zip> . If the version already exists, it updates the zip. The Shopware version compatibility list is built from the shopware/core requirement in the composer.json. Changelogs are built from the CHANGELOG_de-DE.md and CHANGELOG_en-GB.md file. Here is an example content of an changelog file # 0.1.0 * First release in Store The changelog has to be written in both languages.","title":"Extension Store Quick Start"},{"location":"extension_quick_start/#login-into-your-shopware-account","text":"First we need to login into our Shopware account. For this execute the command shopware-cli account login and login with your credentials. This credentials will be saved locally. With shopware-cli account logout can you logout again. For the CI you can set enviroment variables SHOPWARE_CLI_ACCOUNT_EMAIL and SHOPWARE_CLI_ACCOUNT_PASSWORD skip the login step.","title":"Login into your Shopware Account"},{"location":"extension_quick_start/#optional-change-the-active-shopware-account-company","text":"Your Shopware account can be in multiple companies. Use the command shopware-cli account company list to show all companys you have access. With shopware-cli account company use <id> can you switch the current company access.","title":"Optional: Change the active Shopware Account company"},{"location":"extension_quick_start/#optional-create-the-extension-in-the-account","text":"To upload the zip later in the Store, you need to create the extension in the Account. If you haven't done this you can do this with shopware-cli extension create <Name> platform possible values are: classic (Shopware 5) platform (Shopware 6 Plugin system) themes (Shopware 6 App containg theme) apps (Shopware 6 App)","title":"Optional: Create the extension in the Account"},{"location":"extension_quick_start/#getting-the-store-information-into-the-git-repository","text":"To edit the Store page locally, we need first to generate the local files based on the current store page. For this we can use the command shopware-cli account producer extension info pull <extension-folder> . This command creates a .shopware-extension.yml config in the root folder with the current store page. The schema of the file can be found here . Editors supporting SchemaStore, should have autocomplete out of the box like Jetbrains products, VSCode.","title":"Getting the Store Information into the Git repository"},{"location":"extension_quick_start/#uploading-local-store-information-to-the-store","text":"After making changes on the .shopware-extension.yml , you have to run the shopware-cli account producer extension info push <extension-folder> to apply the changes on the store page.","title":"Uploading local Store Information to the Store"},{"location":"extension_quick_start/#uploading-the-extension-zip-to-the-store","text":"To upload the extension zip, you have to use the command shopware-cli account producer extension upload <extension-zip> . If the version already exists, it updates the zip. The Shopware version compatibility list is built from the shopware/core requirement in the composer.json. Changelogs are built from the CHANGELOG_de-DE.md and CHANGELOG_en-GB.md file. Here is an example content of an changelog file # 0.1.0 * First release in Store The changelog has to be written in both languages.","title":"Uploading the extension zip to the Store"},{"location":"install/","text":"You can install the pre-compiled binary (in several different ways), use Docker or compile from source. Below you can find the steps for each of them. Install the pre-compiled binary Homebrew brew install FriendsOfShopware/tap/shopware-cli deb,rpm apt packages Download the .deb, .rpm or .apk packages from the releases page and install them with the appropriate tools. go install go install github.com/FriendsOfShopware/shopware-cli@latest manually Download the pre-compiled binaries from the releases page and copy them to the desired location. Running with Docker You can also use it within a Docker container. To do that, you'll need to execute something more-or-less like the examples below. Registries: ghcr.io/friendsofshopware/shopware-cli Example usage: Builds assets of an extension docker run \\ --rm \\ -v $(pwd):$(pwd) \\ -w $(pwd) \\ -u $(id -u) \\ ghcr.io/friendsofshopware/shopware-cli \\ extension build FroshPlatformAdminer Compiling from source If you just want to build from source for whatever reason, follow these steps: clone: git clone https://github.com/FriendsOfShopware/shopware-cli cd shopware-cli get the dependencies: go mod tidy build: go build -o shopware-cli . verify it works: ./shopware-cli --version","title":"Install"},{"location":"install/#install-the-pre-compiled-binary","text":"","title":"Install the pre-compiled binary"},{"location":"install/#homebrew","text":"brew install FriendsOfShopware/tap/shopware-cli","title":"Homebrew"},{"location":"install/#debrpm-apt-packages","text":"Download the .deb, .rpm or .apk packages from the releases page and install them with the appropriate tools.","title":"deb,rpm apt packages"},{"location":"install/#go-install","text":"go install github.com/FriendsOfShopware/shopware-cli@latest","title":"go install"},{"location":"install/#manually","text":"Download the pre-compiled binaries from the releases page and copy them to the desired location.","title":"manually"},{"location":"install/#running-with-docker","text":"You can also use it within a Docker container. To do that, you'll need to execute something more-or-less like the examples below. Registries: ghcr.io/friendsofshopware/shopware-cli Example usage: Builds assets of an extension docker run \\ --rm \\ -v $(pwd):$(pwd) \\ -w $(pwd) \\ -u $(id -u) \\ ghcr.io/friendsofshopware/shopware-cli \\ extension build FroshPlatformAdminer","title":"Running with Docker"},{"location":"install/#compiling-from-source","text":"If you just want to build from source for whatever reason, follow these steps:","title":"Compiling from source"},{"location":"install/#clone","text":"git clone https://github.com/FriendsOfShopware/shopware-cli cd shopware-cli","title":"clone:"},{"location":"install/#get-the-dependencies","text":"go mod tidy","title":"get the dependencies:"},{"location":"install/#build","text":"go build -o shopware-cli .","title":"build:"},{"location":"install/#verify-it-works","text":"./shopware-cli --version","title":"verify it works:"},{"location":"commands/account/","text":"shopware-cli account login This command can be used to log in into your Shopware account. If you are in multiple companies, see Account Company Use command shopware-cli account logout Logout from your Account shopware-cli account company list List all your companies shopware-cli account company use Switch the active company. Parameters: Company ID - Can be obtained by `account company list` shopware-cli account producer info Lists some basic information about the logged in producer shopware-cli account producer extension list Lists all your extensions in the account shopware-cli account producer extension create Creates an extension Parameters: name - Your extension name generation - classic, platform, apps, themes shopware-cli account producer extension delete Deletes an extension Parameters: name - Your extension name shopware-cli account producer extension info pull Downloads the store page information to the given extension Parameters: path - Extension folder path shopware-cli account producer extension info push Uploads the local store page information Parameters: path - Extension folder path","title":"Account Commands"},{"location":"commands/account/#shopware-cli-account-login","text":"This command can be used to log in into your Shopware account. If you are in multiple companies, see Account Company Use command","title":"shopware-cli account login"},{"location":"commands/account/#shopware-cli-account-logout","text":"Logout from your Account","title":"shopware-cli account logout"},{"location":"commands/account/#shopware-cli-account-company-list","text":"List all your companies","title":"shopware-cli account company list"},{"location":"commands/account/#shopware-cli-account-company-use","text":"Switch the active company. Parameters: Company ID - Can be obtained by `account company list`","title":"shopware-cli account company use"},{"location":"commands/account/#shopware-cli-account-producer-info","text":"Lists some basic information about the logged in producer","title":"shopware-cli account producer info"},{"location":"commands/account/#shopware-cli-account-producer-extension-list","text":"Lists all your extensions in the account","title":"shopware-cli account producer extension list"},{"location":"commands/account/#shopware-cli-account-producer-extension-create","text":"Creates an extension Parameters: name - Your extension name generation - classic, platform, apps, themes","title":"shopware-cli account producer extension create"},{"location":"commands/account/#shopware-cli-account-producer-extension-delete","text":"Deletes an extension Parameters: name - Your extension name","title":"shopware-cli account producer extension delete"},{"location":"commands/account/#shopware-cli-account-producer-extension-info-pull","text":"Downloads the store page information to the given extension Parameters: path - Extension folder path","title":"shopware-cli account producer extension info pull"},{"location":"commands/account/#shopware-cli-account-producer-extension-info-push","text":"Uploads the local store page information Parameters: path - Extension folder path","title":"shopware-cli account producer extension info push"},{"location":"commands/extension/","text":"shopware-cli extension validate Validate extension for store compliance Parameters: * path - Path to zip or extension folder shopware-cli extension prepare Installs composer dependencies of the extension Parameters: * path - Path to extension folder shopware-cli extension zip Creates a zip file from extension folder Parameters: path - Path to extension folder shopware-cli extension build Builds the JS and CSS assets into the extension folder Parameters: path - Path to extension folder. This can be also multiple directories","title":"Extension Commands"},{"location":"commands/extension/#shopware-cli-extension-validate","text":"Validate extension for store compliance Parameters: * path - Path to zip or extension folder","title":"shopware-cli extension validate"},{"location":"commands/extension/#shopware-cli-extension-prepare","text":"Installs composer dependencies of the extension Parameters: * path - Path to extension folder","title":"shopware-cli extension prepare"},{"location":"commands/extension/#shopware-cli-extension-zip","text":"Creates a zip file from extension folder Parameters: path - Path to extension folder","title":"shopware-cli extension zip"},{"location":"commands/extension/#shopware-cli-extension-build","text":"Builds the JS and CSS assets into the extension folder Parameters: path - Path to extension folder. This can be also multiple directories","title":"shopware-cli extension build"},{"location":"commands/project/","text":"shopware-cli project create Create a new Shopware 6 project from the choosen version shopware-cli project admin-build Builds the Administration with all installed extensions shopware-cli project storefront-build Builds the Storefront with all installed extensions shopware-cli project worker Starts the Shopware worker in background and tails the log Arguments: Worker amount - shopware-cli project worker 5 starts 5 workers shopware-cli project dump Dumps the MySQL database as SQL Parameters: --host - MySQL Host (default: 127.0.0.1) --port - MySQL Port (default: 3306) --username - MySQL Username (default: root) --password - MySQL Password (default: root) --output - Output file (default: dump.sql ) --clean - Ignores content of following tables: cart , customer_recovery , dead_message , enqueue , increment , elasticsearch_index_task , log_entry , message_queue_stats , notification , payment_token , refresh_token , version , version_commit , version_commit_data , webhook_event_log --skip-lock-tables - Skips locking of tables","title":"Project Commands"},{"location":"commands/project/#shopware-cli-project-create","text":"Create a new Shopware 6 project from the choosen version","title":"shopware-cli project create"},{"location":"commands/project/#shopware-cli-project-admin-build","text":"Builds the Administration with all installed extensions","title":"shopware-cli project admin-build"},{"location":"commands/project/#shopware-cli-project-storefront-build","text":"Builds the Storefront with all installed extensions","title":"shopware-cli project storefront-build"},{"location":"commands/project/#shopware-cli-project-worker","text":"Starts the Shopware worker in background and tails the log Arguments: Worker amount - shopware-cli project worker 5 starts 5 workers","title":"shopware-cli project worker"},{"location":"commands/project/#shopware-cli-project-dump","text":"Dumps the MySQL database as SQL Parameters: --host - MySQL Host (default: 127.0.0.1) --port - MySQL Port (default: 3306) --username - MySQL Username (default: root) --password - MySQL Password (default: root) --output - Output file (default: dump.sql ) --clean - Ignores content of following tables: cart , customer_recovery , dead_message , enqueue , increment , elasticsearch_index_task , log_entry , message_queue_stats , notification , payment_token , refresh_token , version , version_commit , version_commit_data , webhook_event_log --skip-lock-tables - Skips locking of tables","title":"shopware-cli project dump"},{"location":"shopware-extensions.yml-schema/","text":"Objects .shopware-extension.yml (root object) build store StoreInfoFaqQuestion .shopware-extension.yml .shopware-extension.yml Properties Type Description Required build Build No store Store No Additional properties are not allowed. Config.build Type : Build Required : No Config.store Type : Store Required : No build build Properties Type Description Required zip object No Additional properties are not allowed. Build.zip Type : object Required : No shopware-cli shopware cli extension configuration definition file store store Properties Type Description Required icon string Specifies the Path to the icon (128x128 px) for store. No availabilities string [] Specifies the visibility in stores. No localizations string [] Specifies the languages the extension is translated. No categories string [*-2] Specifies the categories in which the extension can be found. No default_locale string No type string Specifies the type of this extension. No automatic_bugfix_version_compatibility boolean Specifies whether the extension should automatically be set compatible with Shopware bugfix versions. No videos object Specifies the links of YouTube-Videos to show or describe the extension. No tags object Specifies the tags of the extension. No highlights object Specifies the highlights of the extension. No features object Specifies the features of the extension. No faq object Specifies Frequently Asked Questions for the extension. No description object Specifies the description of the extension in store. No installation_manual object Installation manual of the extension in store. No images object [1-*] Specifies images for the extension in the store. No Additional properties are not allowed. Store.icon Specifies the Path to the icon (128x128 px) for store. Type : string Required : No Store.availabilities Specifies the visibility in stores. Type : string [] Each element in the array must be unique. Each element in the array must be one of the following values: German International Required : No Store.localizations Specifies the languages the extension is translated. Type : string [] Each element in the array must be unique. Each element in the array must be one of the following values: de_DE en_GB es_ES fi_FI fr_FR it_IT nb_NO nl_NL pl_PL sv_SE bg_BG cs_CZ pt_PT hy de_CH tr da_DK ru_RU Required : No Store.categories Specifies the categories in which the extension can be found. Type : string [*-2] Each element in the array must be unique. Each element in the array must be one of the following values: Administration BackendBearbeitung System SEOOptimierung Bonitaetspr\u00fcfung Rechtssicherheit MobileAdministration Auswertung KommentarFeedback Tracking MobileAuswertung Integration Shopsystem PreissuchmaschinenPortale Warenwirtschaft Versand Bezahlung StorefrontDetailanpassungen Sprache Suche HeaderFooter Produktdarstellung UebergreifendeDarstellung Detailseite MenueKategorien Bestellprozess KundenkontoPersonalisierung IconsButons Schriftarten WidgetsSnippets Sonderfunktionen Themes Branche Home+Furnishings FashionBekleidung GartenNatur KosmetikGesundheit EssenTrinken KinderPartyGeschenke SportLifestyleReisen TechnikIT IndustrieGro\u00dfhandel MigrationTools Einkaufswelten ConversionOptimierung Extensions MarketingTools B2BExtensions Blog Required : No Store.default_locale Type : string Required : No Allowed values : \"en_GB\" \"de_DE\" Store.type Specifies the type of this extension. Type : string Required : No Allowed values : \"extension\" \"theme\" Store.automatic_bugfix_version_compatibility Specifies whether the extension should automatically be set compatible with Shopware bugfix versions. Type : boolean Required : No Store.videos Specifies the links of YouTube-Videos to show or describe the extension. Type : object Required : No Store.tags Specifies the tags of the extension. Type : object Required : No Store.highlights Specifies the highlights of the extension. Type : object Required : No Store.features Specifies the features of the extension. Type : object Required : No Store.faq Specifies Frequently Asked Questions for the extension. Type : object Required : No Store.description Specifies the description of the extension in store. Type : object Required : No Store.installation_manual Installation manual of the extension in store. Type : object Required : No Store.images Specifies images for the extension in the store. Type : object [1-*] Required : No StoreInfoFaqQuestion StoreInfoFaqQuestion Properties Type Description Required question string \u2713 Yes answer string \u2713 Yes Additional properties are not allowed. StoreInfoFaqQuestion.question Type : string Required : \u2713 Yes StoreInfoFaqQuestion.answer Type : string Required : \u2713 Yes","title":"Schema of .shopware-extensions.yml"},{"location":"shopware-extensions.yml-schema/#objects","text":".shopware-extension.yml (root object) build store StoreInfoFaqQuestion","title":"Objects"},{"location":"shopware-extensions.yml-schema/#shopware-extensionyml","text":".shopware-extension.yml Properties Type Description Required build Build No store Store No Additional properties are not allowed.","title":".shopware-extension.yml"},{"location":"shopware-extensions.yml-schema/#configbuild","text":"Type : Build Required : No","title":"Config.build"},{"location":"shopware-extensions.yml-schema/#configstore","text":"Type : Store Required : No","title":"Config.store"},{"location":"shopware-extensions.yml-schema/#build","text":"build Properties Type Description Required zip object No Additional properties are not allowed.","title":"build"},{"location":"shopware-extensions.yml-schema/#buildzip","text":"Type : object Required : No","title":"Build.zip"},{"location":"shopware-extensions.yml-schema/#shopware-cli","text":"shopware cli extension configuration definition file","title":"shopware-cli"},{"location":"shopware-extensions.yml-schema/#store","text":"store Properties Type Description Required icon string Specifies the Path to the icon (128x128 px) for store. No availabilities string [] Specifies the visibility in stores. No localizations string [] Specifies the languages the extension is translated. No categories string [*-2] Specifies the categories in which the extension can be found. No default_locale string No type string Specifies the type of this extension. No automatic_bugfix_version_compatibility boolean Specifies whether the extension should automatically be set compatible with Shopware bugfix versions. No videos object Specifies the links of YouTube-Videos to show or describe the extension. No tags object Specifies the tags of the extension. No highlights object Specifies the highlights of the extension. No features object Specifies the features of the extension. No faq object Specifies Frequently Asked Questions for the extension. No description object Specifies the description of the extension in store. No installation_manual object Installation manual of the extension in store. No images object [1-*] Specifies images for the extension in the store. No Additional properties are not allowed.","title":"store"},{"location":"shopware-extensions.yml-schema/#storeicon","text":"Specifies the Path to the icon (128x128 px) for store. Type : string Required : No","title":"Store.icon"},{"location":"shopware-extensions.yml-schema/#storeavailabilities","text":"Specifies the visibility in stores. Type : string [] Each element in the array must be unique. Each element in the array must be one of the following values: German International Required : No","title":"Store.availabilities"},{"location":"shopware-extensions.yml-schema/#storelocalizations","text":"Specifies the languages the extension is translated. Type : string [] Each element in the array must be unique. Each element in the array must be one of the following values: de_DE en_GB es_ES fi_FI fr_FR it_IT nb_NO nl_NL pl_PL sv_SE bg_BG cs_CZ pt_PT hy de_CH tr da_DK ru_RU Required : No","title":"Store.localizations"},{"location":"shopware-extensions.yml-schema/#storecategories","text":"Specifies the categories in which the extension can be found. Type : string [*-2] Each element in the array must be unique. Each element in the array must be one of the following values: Administration BackendBearbeitung System SEOOptimierung Bonitaetspr\u00fcfung Rechtssicherheit MobileAdministration Auswertung KommentarFeedback Tracking MobileAuswertung Integration Shopsystem PreissuchmaschinenPortale Warenwirtschaft Versand Bezahlung StorefrontDetailanpassungen Sprache Suche HeaderFooter Produktdarstellung UebergreifendeDarstellung Detailseite MenueKategorien Bestellprozess KundenkontoPersonalisierung IconsButons Schriftarten WidgetsSnippets Sonderfunktionen Themes Branche Home+Furnishings FashionBekleidung GartenNatur KosmetikGesundheit EssenTrinken KinderPartyGeschenke SportLifestyleReisen TechnikIT IndustrieGro\u00dfhandel MigrationTools Einkaufswelten ConversionOptimierung Extensions MarketingTools B2BExtensions Blog Required : No","title":"Store.categories"},{"location":"shopware-extensions.yml-schema/#storedefault_locale","text":"Type : string Required : No Allowed values : \"en_GB\" \"de_DE\"","title":"Store.default_locale"},{"location":"shopware-extensions.yml-schema/#storetype","text":"Specifies the type of this extension. Type : string Required : No Allowed values : \"extension\" \"theme\"","title":"Store.type"},{"location":"shopware-extensions.yml-schema/#storeautomatic_bugfix_version_compatibility","text":"Specifies whether the extension should automatically be set compatible with Shopware bugfix versions. Type : boolean Required : No","title":"Store.automatic_bugfix_version_compatibility"},{"location":"shopware-extensions.yml-schema/#storevideos","text":"Specifies the links of YouTube-Videos to show or describe the extension. Type : object Required : No","title":"Store.videos"},{"location":"shopware-extensions.yml-schema/#storetags","text":"Specifies the tags of the extension. Type : object Required : No","title":"Store.tags"},{"location":"shopware-extensions.yml-schema/#storehighlights","text":"Specifies the highlights of the extension. Type : object Required : No","title":"Store.highlights"},{"location":"shopware-extensions.yml-schema/#storefeatures","text":"Specifies the features of the extension. Type : object Required : No","title":"Store.features"},{"location":"shopware-extensions.yml-schema/#storefaq","text":"Specifies Frequently Asked Questions for the extension. Type : object Required : No","title":"Store.faq"},{"location":"shopware-extensions.yml-schema/#storedescription","text":"Specifies the description of the extension in store. Type : object Required : No","title":"Store.description"},{"location":"shopware-extensions.yml-schema/#storeinstallation_manual","text":"Installation manual of the extension in store. Type : object Required : No","title":"Store.installation_manual"},{"location":"shopware-extensions.yml-schema/#storeimages","text":"Specifies images for the extension in the store. Type : object [1-*] Required : No","title":"Store.images"},{"location":"shopware-extensions.yml-schema/#storeinfofaqquestion","text":"StoreInfoFaqQuestion Properties Type Description Required question string \u2713 Yes answer string \u2713 Yes Additional properties are not allowed.","title":"StoreInfoFaqQuestion"},{"location":"shopware-extensions.yml-schema/#storeinfofaqquestionquestion","text":"Type : string Required : \u2713 Yes","title":"StoreInfoFaqQuestion.question"},{"location":"shopware-extensions.yml-schema/#storeinfofaqquestionanswer","text":"Type : string Required : \u2713 Yes","title":"StoreInfoFaqQuestion.answer"}]}